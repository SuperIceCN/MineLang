name: Maven构建

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  check-files:
    name: 检查仓库文件
    runs-on: ubuntu-latest
    outputs:
      changed-files: ${{ steps.changed-files.outputs.all_changed_and_modified_files }}

    steps:
      - name: 检出仓库内容
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 检查文件改动情况
        id: check-changed-files
        uses: tj-actions/changed-files@v11.4
        with:
          since_last_remote_commit: 'true'

  build:
    name: 编译Java
    runs-on: ubuntu-latest
    needs: check-files
    #if: contains(needs.check-files.outputs.changed-files, 'MineLangCompiler/')
    env:
      graalvm-version: '21.3.0'

    steps:
      - name: 检出仓库内容
        uses: actions/checkout@v2

      - name: 缓存Maven依赖项
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            /opt/hostedtoolcache/GraalVM/21.3.0-java17-amd64/x64
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-graalvm-${{ env.graalvm-version }}
          restore-keys: |
            ${{ runner.os }}-maven-graalvm

      - name: 配置GraalVM环境
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: ${{ env.graalvm-version }}
          java: 'java17'
          arch: 'amd64'

      - name: 获取GraalVM路径
        run: echo ${{ env.GRAALVM_HOME }}

      - name: Maven构建
        run: mvn -B package --file pom.xml

      - name: 上传MineCompiler的jar包
        uses: actions/upload-artifact@v2
        with:
          name: MineCompiler.jar
          path: MineLangCompiler/target/MineLangCompiler-1.0-SNAPSHOT.jar
