name: Maven构建

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  check-files:
    name: 检查仓库文件
    runs-on: ubuntu-latest
    outputs:
      changed-files: ${{ steps.check-changed-files.outputs.all_changed_and_modified_files }}

    steps:
      - name: 检出仓库内容
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 检查文件改动情况
        id: check-changed-files
        uses: tj-actions/changed-files@v11.4
        with:
          since_last_remote_commit: 'true'

      - name: 输出更改文件列表
        run: echo ${{ steps.check-changed-files.outputs.all_changed_and_modified_files }}

  build-MineLang:
    name: 编译MineLang
    runs-on: ubuntu-latest
    needs: check-files
    if: contains(needs.check-files.outputs.changed-files, 'MineLangCompiler/') || (github.event_name == 'push' && contains(github.event.commits[0].message, '发布新版本'))
    env:
      graalvm-version: '21.3.0'
      java-version: 'java17'

    steps:
      - name: 检出仓库内容
        uses: actions/checkout@v2

      - name: 缓存Maven依赖项
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-MineLang
          restore-keys: |
            ${{ runner.os }}-maven-MineLang

      - name: 下载GraalVM环境
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: ${{ env.graalvm-version }}
          java: ${{ env.java-version }}
          arch: 'amd64'

      - name: Maven构建
        run: mvn -B package --file pom.xml --pl MineLangCompiler

      - name: 上传MineLang jar包
        uses: actions/upload-artifact@v2
        with:
          name: MineCompiler.jar
          path: MineLangCompiler/target/MineLangCompiler-1.0-SNAPSHOT.jar

      - name: 上传MineLang运行库
        uses: actions/upload-artifact@v2
        with:
          name: MineLangLib
          path:
            MineLangCompiler/target/libs/*.jar

  build-InterpreterServer:
    name: 编译运行服务器
    runs-on: ubuntu-latest
    needs: check-files
    if: contains(needs.check-files.outputs.changed-files, 'MineInterpreterServer/') || (github.event_name == 'push' && contains(github.event.commits[0].message, '发布新版本'))
    env:
      graalvm-version: '21.3.0'
      java-version: 'java17'

    steps:
      - name: 检出仓库内容
        uses: actions/checkout@v2

      - name: 缓存Maven依赖项
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-InterpreterServer
          restore-keys: |
            ${{ runner.os }}-maven-InterpreterServer

      - name: 下载GraalVM环境
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: ${{ env.graalvm-version }}
          java: ${{ env.java-version }}
          arch: 'amd64'

      - name: Maven构建
        run: mvn -B package --file pom.xml --pl MineInterpreterServer --am

      - name: 上传运行服务器jar包
        uses: actions/upload-artifact@v2
        with:
          name: MineInterpreterServer.jar
          path: MineInterpreterServer/target/MineInterpreterServer-1.0-SNAPSHOT.jar

  build-Launcher:
    name: 编译启动器
    runs-on: windows-latest
    needs: check-files
    if: contains(needs.check-files.outputs.changed-files, 'MineLauncher/') || (github.event_name == 'push' && contains(github.event.commits[0].message, '发布新版本'))
    env:
      graalvm-version: '21.3.0'
      java-version: 'java17'

    steps:
      - name: 检出仓库内容
        uses: actions/checkout@v2

      - name: 缓存Maven依赖项
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-Launcher
          restore-keys: |
            ${{ runner.os }}-maven-Launcher

      - name: 下载GraalVM环境
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm: ${{ env.graalvm-version }}
          java: ${{ env.java-version }}
          arch: 'amd64'

      - name: Maven构建
        run: mvn -B package --file pom.xml --pl MineLauncher --am

      - name: 安装java本机编译组件
        run: |
          ${{ env.GRAALVM_HOME }}\bin\gu.cmd install native-image

      - name: 配置msvc环境
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: 本机镜像编译
        run: |
          ./MineLauncher/script/build.cmd ${{ env.GRAALVM_HOME }}

      - name: 上传可执行文件
        uses: actions/upload-artifact@v2
        with:
          name: Launcher-Windows
          path: MineLauncher/target/libs/MineLang.exe

  release:
    name: 发布新版本
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.event.commits[0].message, '发布新版本')
    needs:
      - build-MineLang
      - build-Launcher
      - build-InterpreterServer
    steps:
      - uses: actions/checkout@v2
        name: 检出仓库内容

      - uses: actions/download-artifact@v2
        name: 下载所有构件
        with:
          path: artifacts/

      - name: 压缩构件
        run: bash .github/scripts/zip.sh artifacts

      - uses: zoexx/github-action-json-file-properties@release
        name: 获取发布信息
        id: get-release-info
        with:
          file_path: '.github/release-info.json'

      - uses: ncipollo/release-action@v1
        name: 发布新版本
        with:
          artifacts: "artifacts/zipped/*.zip"
          tag: ${{ steps.get-release-info.outputs.version }}
          prerelease: ${{ contains(steps.get-release-info.outputs.version, 'beta') }}
          bodyFile: ${{ steps.get-release-info.outputs.body_path }}
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: master
          allowUpdates: true

      - name: 上传构件至云存储
        uses: tvrcgo/upload-to-oss@v0.1.1
        with:
          key-id: ${{ secrets.OSS_KEY_ID }}
          key-secret: ${{ secrets.OSS_KEY_SECRET }}
          region: oss-cn-hongkong
          bucket: minelang-assets
          asset-path: ./artifacts/zipped
          target-path: /MineLang-${{ steps.get-release-info.outputs.version }}/
